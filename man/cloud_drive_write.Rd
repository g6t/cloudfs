% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drive_transfer.R
\name{cloud_drive_write}
\alias{cloud_drive_write}
\title{Write an object to Google Drive}
\usage{
cloud_drive_write(x, file, fun = NULL, ..., local = FALSE, root = NULL)
}
\arguments{
\item{x}{An R object (e.g. data frame) to write to Google Drive.}

\item{file}{Path to a file relative to project folder root. Can contain only
letters, digits, '-', '_', '.', spaces and '/' symbols.}

\item{fun}{A function to write a file to cloud location to which x and a file
path will be passed (in that order). By default, if \code{fun = NULL}, it will
be attempted to find an appropriate writing function based on the file
extension.}

\item{...}{Further parameters to pass to \code{fun}}

\item{local}{(logical) If \code{TRUE}, will additionally create a local file at
the corresponding path. Default is \code{FALSE}.}

\item{root}{Google Drive ID or URL of the project root. This serves as the
reference point for all relative paths. When left as \code{NULL}, the root is
automatically derived from the \code{cloudfs.drive} field of the project's
DESCRIPTION file.}
}
\description{
Writes an R object to a file in project's Google Drive folder.
In most cases it is expected to be used for writing data.frames as csv, sav
or any other tabular data formats to Google Drive. But it is also possible
to save any R object if a proper saving function is provided. It tries to
guess a suitable writing function and the output file name where possible.
}
\section{Default writing functions}{


Here's how we identify a writing function based on file extension
\itemize{
\item \code{.csv}: \link[readr:write_delim]{readr::write_csv}
\item \code{.json}: \link[jsonlite:read_json]{jsonlite::write_json}
\item \code{.rds}: \link[base:readRDS]{base::saveRDS}
\item \code{.xls}: \link[writexl:write_xlsx]{writexl::write_xlsx}
\item \code{.xlsx}: \link[writexl:write_xlsx]{writexl::write_xlsx}
\item \code{.sav}: \link[haven:read_spss]{haven::write_sav}
\item \code{.xml}: \link[xml2:write_xml]{xml2::write_xml}
}
}

\examples{
\dontrun{
# write mtcars dataframe to mtcars.csv in data folder
cloud_drive_write(mtcars, "data/mtcars.csv")
cloud_drive_write(random_forest, "models/random_forest.rds")

# provide custom writing function with parameters 
cloud_drive_write(c("one", "two"), "text/count.txt", writeLines, sep = "\n\n")
}

}
