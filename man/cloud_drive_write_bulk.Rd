% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drive_transfer_bulk.R
\name{cloud_drive_write_bulk}
\alias{cloud_drive_write_bulk}
\title{Write multiple objects to Google Drive in bulk}
\usage{
cloud_drive_write_bulk(
  content,
  fun = NULL,
  ...,
  local = FALSE,
  quiet = FALSE,
  root = NULL
)
}
\arguments{
\item{content}{(data.frame) output of \code{cloud_object_ls()}}

\item{fun}{A custom writing function. If \code{NULL} (default), the appropriate
writing function will be inferred based on the file's extension.}

\item{...}{Additional arguments to pass to the writing function \code{fun}.}

\item{local}{Logical. If \code{TRUE}, a local copy of the file will also be
created at the specified path. Default is \code{FALSE}.}

\item{quiet}{all caution messages may be turned off by setting this parameter
to \code{TRUE}.}

\item{root}{Google Drive ID or URL of the project root. This serves as the
reference point for all relative paths. When left as \code{NULL}, the root is
automatically derived from the \code{cloudfs.drive} field of the project's
DESCRIPTION file.}
}
\value{
Invisibly returns the input \code{content} dataframe.
}
\description{
This function allows for the bulk writing of multiple R objects
to the project's designated Google Drive folder. To prepare a list of
objects for writing, use \link{cloud_object_ls}, which generates a dataframe
listing the objects and their intended destinations in a format akin to the
output of \link{cloud_drive_ls}. By default, the function determines the
appropriate writing method based on each file's extension. However, if a
specific writing function is provided via the \code{fun} parameter, it will be
applied to all files, which may not be ideal if dealing with a variety of
file types.
}
\examples{
\dontrun{
# write two csv files: data/df_mtcars.csv and data/df_iris.csv
cloud_object_ls(
  dplyr::lst(mtcars = mtcars, iris = iris),
  path = "data",
  extension = "csv",
  prefix = "df_"
) \%>\% 
cloud_drive_write_bulk()
}
  
}
